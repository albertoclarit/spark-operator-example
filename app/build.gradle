/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details on building Java & JVM projects, please refer to https://docs.gradle.org/8.13/userguide/building_java_projects.html in the Gradle documentation.
 */

plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    id 'application'
    // Apply the shadow plugin to generate a fat JAR
    id 'com.github.johnrengelman.shadow' version '8.1.1'
    // Apply the semver plugin for semantic versioning
    id 'net.thauvin.erik.gradle.semver' version '1.0.4'
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    // Use JUnit Jupiter for testing.
    testImplementation 'org.junit.jupiter:junit-jupiter:5.9.1'

    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

    // This dependency is used by the application.
    implementation 'com.google.guava:guava:31.1-jre'

    // Apache Spark dependencies
    compileOnly 'org.apache.spark:spark-core_2.12:3.5.5'
    compileOnly 'org.apache.spark:spark-sql_2.12:3.5.5'

    // Hadoop AWS dependencies
    compileOnly 'org.apache.hadoop:hadoop-aws:3.3.4'
    compileOnly 'org.apache.hadoop:hadoop-common:3.3.4'
    compileOnly 'org.apache.hadoop:hadoop-client:3.3.4'
    compileOnly 'org.apache.hadoop:hadoop-hdfs:3.3.4'
    compileOnly 'org.apache.hadoop:hadoop-mapreduce-client-core:3.3.4'
    compileOnly 'com.amazonaws:aws-java-sdk-bundle:1.12.261'
}

// Apply a specific Java toolchain to ease working on different environments.
java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

application {
    // Define the main class for the application.
    mainClass = 'org.example.App'
}

tasks.named('test') {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
}

tasks.named('shadowJar') {
    doFirst {
        def semverFile = file('version.properties')
        def props = new Properties()
        semverFile.withInputStream { props.load(it) }
        archiveBaseName.set('app')
        archiveClassifier.set('all')
        archiveVersion.set(props.getProperty('version.semver'))
        mergeServiceFiles()
    }
}

configurations {
    hadoopAwsDeps
}

dependencies {
    hadoopAwsDeps 'org.apache.hadoop:hadoop-aws:3.3.4'
    hadoopAwsDeps 'org.apache.hadoop:hadoop-common:3.3.4'
    hadoopAwsDeps 'org.apache.hadoop:hadoop-client:3.3.4'
  //  hadoopAwsDeps 'org.apache.hadoop:hadoop-hdfs:3.3.4'
    hadoopAwsDeps 'org.apache.hadoop:hadoop-mapreduce-client-core:3.3.4'
    hadoopAwsDeps 'com.amazonaws:aws-java-sdk-bundle:1.12.261'
}

task copyDependencies(type: Copy) {
    from configurations.hadoopAwsDeps
    into "${rootProject.projectDir}/libs"
}

semver {
    properties = 'version.properties'
    keysPrefix = 'version.'
}

incrementBuildMeta {
    doFirst {
        if (buildMeta != null && buildMeta != '') {
            buildMeta = sprintf('%03d', (buildMeta as Integer) + 1)
        } else {
            buildMeta = '001'
        }
    }
}

apply from: 'custom.gradle'